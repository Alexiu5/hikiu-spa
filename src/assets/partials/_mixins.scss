@import './variables';
@mixin content($height, $color:rgb(182, 182, 171)){
    height: $height;
    width: 100%;
    background-color: $color;
    margin-bottom: 10px;
    overflow: hidden;
    padding-top: 5%;
}

@mixin flex-row($width: 100%, $height: 100%) {
    display: flex;
    flex-direction: row;
    width: $width;
    height: $height;
}

@mixin flex-column($width: 100%, $height: 100%) {
    display: flex;
    flex-direction: column;
    width: $width;
    height: $height;

}

@mixin bo-shadow() {
    -webkit-box-shadow: -1px 20px 27px -10px rgba(0,0,0,0.34);
    -moz-box-shadow: -1px 20px 27px -10px rgba(0,0,0,0.34);
    box-shadow: -1px 20px 27px -10px rgba(0,0,0,0.34)
}


@mixin third-icon {
    position: relative;
    width: 30%;
    height: 30%;
    left: 70%;
    top: 0;
}

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
	$raw-query: map-get($breakpoints, $breakpoint);

	@if $raw-query {
		$query: if(
		type-of($raw-query) == 'string',
		unquote($raw-query),
		inspect($raw-query)
		);

		@media #{$query} {
		@content;
		}
	} @else {
		@error 'No value found for `#{$breakpoint}`. '
			+ 'Please make sure it is defined in `$breakpoints` map.';
	}
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
